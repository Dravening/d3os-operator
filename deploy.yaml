# 使用 ./bin/kustomize build config/default > deploy.yaml 生成
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: d3os-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dataservices.d3os-product.com.d3os
spec:
  group: d3os-product.com.d3os
  names:
    kind: DataService
    listKind: DataServiceList
    plural: dataservices
    singular: dataservice
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DataService is the Schema for the dataservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataServiceSpec defines the desired state of DataService
            properties:
              api-manager:
                description: 服务
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              auth:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              ds-adapter:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              es-adapter:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              eureka:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              gateway-master:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              gateway-web:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              mysql:
                description: 中间件 可选连接
                properties:
                  kind:
                    type: integer
                  name:
                    type: string
                  thirdParty:
                    description: MiddlewareThirdParty 如果中间件采用真机部署，填写此对象
                    properties:
                      checkCMD:
                        type: string
                      custom:
                        additionalProperties:
                          type: string
                        type: object
                      password:
                        type: string
                      url:
                        type: string
                      username:
                        type: string
                    required:
                    - checkCMD
                    - url
                    type: object
                required:
                - kind
                - name
                type: object
              proxy:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              trd-adapter:
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
              uuc:
                properties:
                  kind:
                    type: integer
                  name:
                    type: string
                  thirdParty:
                    description: MiddlewareThirdParty 如果中间件采用真机部署，填写此对象
                    properties:
                      checkCMD:
                        type: string
                      custom:
                        additionalProperties:
                          type: string
                        type: object
                      password:
                        type: string
                      url:
                        type: string
                      username:
                        type: string
                    required:
                    - checkCMD
                    - url
                    type: object
                required:
                - kind
                - name
                type: object
              web:
                description: 前台, 一般是nginx
                properties:
                  env:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  name:
                    type: string
                  nodePort:
                    format: int32
                    type: integer
                  port:
                    format: int32
                    type: integer
                  replica:
                    format: int32
                    type: integer
                required:
                - image
                - name
                - port
                - replica
                type: object
            required:
            - api-manager
            - auth
            - ds-adapter
            - es-adapter
            - eureka
            - gateway-master
            - gateway-web
            - mysql
            - proxy
            - trd-adapter
            - uuc
            - web
            type: object
          status:
            description: DataServiceStatus defines the observed state of DataService
            properties:
              api-manager:
                type: boolean
              auth:
                type: boolean
              ds-adapter:
                type: boolean
              es-adapter:
                type: boolean
              eureka:
                type: boolean
              gateway-master:
                type: boolean
              gateway-web:
                type: boolean
              mysql:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: boolean
              proxy:
                type: boolean
              trd-adapter:
                type: boolean
              uuc:
                type: boolean
              web:
                type: boolean
            required:
            - api-manager
            - auth
            - ds-adapter
            - es-adapter
            - eureka
            - gateway-master
            - gateway-web
            - mysql
            - proxy
            - trd-adapter
            - uuc
            - web
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: d3os-operator-controller-manager
  namespace: d3os-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: d3os-operator-leader-election-role
  namespace: d3os-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: d3os-operator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - d3os-product.com.d3os
  resources:
  - dataservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - d3os-product.com.d3os
  resources:
  - dataservices/finalizers
  verbs:
  - update
- apiGroups:
  - d3os-product.com.d3os
  resources:
  - dataservices/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: d3os-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: d3os-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: d3os-operator-leader-election-rolebinding
  namespace: d3os-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: d3os-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: d3os-operator-controller-manager
  namespace: d3os-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d3os-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d3os-operator-manager-role
subjects:
- kind: ServiceAccount
  name: d3os-operator-controller-manager
  namespace: d3os-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d3os-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d3os-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: d3os-operator-controller-manager
  namespace: d3os-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: e0a9249d.com.d3os
kind: ConfigMap
metadata:
  name: d3os-operator-manager-config
  namespace: d3os-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: d3os-operator-controller-manager-metrics-service
  namespace: d3os-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: d3os-operator-controller-manager
  namespace: d3os-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: registry.cn-hangzhou.aliyuncs.com/draven_yyz/d3os-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: d3os-operator-controller-manager
      terminationGracePeriodSeconds: 10
